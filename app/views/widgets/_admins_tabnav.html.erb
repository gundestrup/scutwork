<%
# this partial renders a tabnav, you can call it in your views with:
#   <%= tabnav :user_actions % > (just the tabnav)
# or, if you want a boxed tabnav:
#   <% tabnav :user_actions do % >
#     your html here
#   <% end % >
# (remove the space between % and >, we don't want to mess up your brand new tabnav :-))
#
# you can pass render_tabnav a few options:
#   :generate_css => true|false #=> generates a default inline css for the tabnav, defaults to false
#   :html => aHash #=> sets html options for the tabnav's div (es :html => {:class=> 'myCssClass', :id=>'myCssId'})
#
render_tabnav :admins,
              :generate_css => false do

  # this generates a tab for every controller in your app
  # you'll probably want to delete this and
  # add tabs one by one as shown below

  add_tab do |t|
    t.named 'Configurations'
    t.links_to :controller => 'configurations', :action => 'index'
    t.highlights_on :controller => 'configurations'
  end

  add_tab do |t|
    t.named 'Rise Error'
    t.links_to :controller => 'admins', :action => 'error'
    t.highlights_on :controller => 'admins'
  end


  #
  # you can use restful routes with:
  #
  #add_tab do |t|
  #  t.named 'Users'
  #  t.links_to hash_for_users_path
  #end
  #
  #add_tab do |t|
  #  t.named 'Customers'
  #  t.links_to :controller => 'customers'
  #end
  #
  # # A tab can be initialized with a Hash like this:
  #
  # add_tab :name => 'welcome', :link => {:controller=>'welcome'}
  #
  # # You can have a dynamic name or link
  # # (this partial is evaluated in the page context, so it sees every helper or instance variable)
  #
  # add_tab do |t|
  #   t.named "#{current_user} details"
  #   t.links_to :controller => 'users', :action => 'show', :id => current_user.id
  # end
  #
  # # You can have an image inside
  #
  # add_tab do |t|
  #   t.named image_tag('test')
  #   t.links_to :controller => 'users', :action => 'show', :id => current_user.id
  # end
end
%>